OOP란?
객체지향프로그래밍(Object Oriented Programming)
부품객체(클래스)를 조립해서 완성해가는 프로그램
부품객체(클래스)를 조립하여 완성된 프로그램으로 만드는 기법
- 부품객체(클래스)를 조립하여 만들어진 프로그래밍 기법

CLASS vs INSTANCE
클래스는 설계도
인스턴스는 실제로 만들어진 객체
- 클래스(설계도) 틀로 여러 개의 객체(인스턴스)들을 만들 수 있음
- 붕어빵기계(설계도) --------------------------------------------->>> 붕어빵들(객체)
                             인스턴스화( heap: 실제 만들었는지 확인)            인스턴스- 각각의 특징

- 클래스(부품객체) - 특징에 맞게 코딩
- 상태(멤버변수)와 행위(멤버함수)

runtime data area 영역 3가지
[ method, static, final ] (X)
[ method( 클래스들의 정보, static, final,,,,, : 공용 ), heap( new, this : 동적 ), stack( 지역변수 ) ] (O)

A11 a1 = new A11();
1. 메모리 빌려오고 객체 생성하는 역할 : [ a1 ](X) [ new ] (O)
2. String null, int는 0으로 초기화 : [ A11() ]
3. new A11() 한 주소를 갖고 있는 것은 : [ A11 ](X) [ A1 ] (O)